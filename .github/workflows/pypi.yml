name: Build and Publish

on: release

jobs:
  bdist:
    name: Release
    runs-on: ubuntu-latest
    env:
      python-version: '3.8'
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ env.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ env.python-version }}
      - name: Get Python version
        id: python-version
        run: |
             echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")
      - name: Install Poetry
        uses: dschep/install-poetry-action@v1.3
        with:
           create_virtualenvs: 'true'
      - name: Set Poetry config
        run: |
            poetry config virtualenvs.in-project true
      - name: Cache Poetry virtualenv
        uses: actions/cache@v1
        id: cache
        with:
          path: .venv
          key: poetry-venv-${{ runner.os }}-${{ steps.python-version.outputs.version }}
      - name: Install/update package and dependencies
        run: poetry install
      - name: Build and publish to PyPi
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
        run: poetry publish --build