name: Code Coverage and Linting
on: [push, pull_request]
jobs:
  coverage-and-linting:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
    env:
      PYTHON: ${{ matrix.python-version }}
      DAGPI_TOKEN: ${{ secrets.DAGPI_TOKEN }}
    steps:
    - uses: actions/checkout@master
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      uses: dschep/install-poetry-action@v1.3
      with:
        create_virtualenvs: 'true'
    - name: Get Python version
      id: python-version
      run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")
    - name: Set Poetry config
      run: |
          poetry config virtualenvs.in-project true
    - name: Cache Poetry virtualenv
      uses: actions/cache@v1
      id: cache
      with:
        path: .venv
        key: poetry-venv-${{ runner.os }}-${{ steps.python-version.outputs.version }}
    - name: Install/update package and dependencies
      run: poetry install
    - name: lint
      run: |
          poetry run flake8 asyncdagpi --count --select=E9,F63,F7,F82 --show-source --statistics
          poetry run flake8 asyncdagpi --count --exit-zero  --statistics
    - name: Test with Pytest and measure coverage
      run: poetry run pytest --cov-report=xml --cov=pecho tests/
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1